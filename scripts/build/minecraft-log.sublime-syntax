%YAML 1.2
---
name: Minecraft Log
scope: text.log.minecraft
file_extensions:
  - log

contexts:
  main:
    # Rule for TRACE and DEBUG lines to make them all dim
    - match: '^(?=.*\[[^/]+/(?:TRACE|DEBUG)\])'
      push: dim-line

    # Dim timestamp and thread for other lines
    - match: '^(\[\d{2}:\d{2}:\d{2}\]\s*\[[^/]+)/'
      scope: comment

    # Log levels for non-dimmed lines
    - match: '(?i)(INFO)\]'
      scope: keyword
    - match: '(?i)(WARN|WARNING)\]'
      scope: string.regexp
    - match: '(?i)(ERROR|FATAL|SEVERE|EXCEPTION|FAILED)\]'
      scope: invalid

    # Mod ID in brackets
    - match: '\[([^\]\s]+)\]:'
      captures:
        1: entity.name.tag

    # Java class paths and packages
    - match: '\b([a-zA-Z_][a-zA-Z0-9_]*\.)+([a-zA-Z_][a-zA-Z0-9_.$]*)\b'
      scope: entity.name.class

    # File names (jars, configs, etc.)
    - match: '([a-zA-Z0-9_.\-+\[\]]+?\.jar)\b'
      scope: string
    - match: '\b\w+_at\.cfg\b' # Access Transformer files
      scope: string.unquoted
    - match: 'mixins\.[a-zA-Z0-9_.-]+\.json' # Mixin JSON files
      scope: string.unquoted

    # File paths
    - match: '([A-Za-z]:)?([\/][\w\s.\()%~-]+)+[\/]?'
      scope: string.quoted.single

    # Version numbers
    - match: '\b\d{1,3}(\.\d+)+([-.+]?[a-zA-Z0-9_.-]+)?\b'
      scope: constant.numeric

    # Hexadecimal hashes
    - match: '\b[0-9a-fA-F]{16,}\b'
      scope: constant.other.symbol

    # Mixin annotations
    - match: '@(Inject|ModifyArg|Redirect|ModifyVariable|ModifyConstant|Overwrite|Shadow|Accessor|Invoker|Mixin)'
      scope: keyword.control

    # Stack traces
    - match: '^\s*at\s+'
      push: stack-trace
    - match: 'Caused by:'
      scope: invalid

  dim-line:
    - meta_scope: comment
    - match: '$'
      pop: true

  stack-trace:
    - meta_scope: meta.stack-trace
    - match: '^\s*at\s+((?:[a-zA-Z0-9_]+\.)+[a-zA-Z0-9_.$<>]+)\(([^)]*)\)'
      captures:
        1: entity.name.function
        2: string.quoted.double
    - match: '^\s*... \d+ more'
      scope: comment
      pop: true
    - match: '(?=Caused by:)'
      pop: true
    - match: '(?=^\[\[\])'  # Lookahead for start of a new log line
      pop: true
    - match: '$'
      pop: true
